clear
nx = 41;
ny = 10;
x = [-2 -1.9 -1.8 -1.7 -1.6 -1.5 -1.4 -1.3 -1.2 -1.1 -1 -0.9 -0.8 -0.7 -0.6 -0.5 -0.4 -0.3 -0.2 -0.1 0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1 1.1 1.2 1.3 1.4 1.5 1.6 1.7 1.8 1.9 2];
format long
y = [-5.09912 1.70538 -11.3754 -11.9563 -9.4589 -1.5666 6.36234 -5.39767 -18.4009 12.8791;
    5.50251 -6.43 -10.1077 -5.67337 20.3828 -7.53214 9.3187 -28.681 2.47651 9.16439;
    -11.2582 -21.4917 4.40626 10.8556 15.9742 -2.25101 6.38229 -15.3257 -16.5713 1.92244; 
    -15.5849 4.18654 -5.43249 -4.31727 -3.267 -3.8288 -4.33499 -13.9785 5.81965 -30.491; 
    -6.28646 1.28968 2.56002 -12.2272 -10.401 -2.33587 3.79363 -19.2927 -22.2004 -8.68739; 
    -2.68661 -9.17514 13.9916 -0.904705 7.70236 -7.75493 -7.55152 -15.7467 -22.6123 -6.11555; 
    -6.16956 4.87991 -5.89312 15.4598 -25.7264 -8.5748 6.28165 -23.0316 -2.96818 -19.888; 
    -8.08781 -17.441 16.8772 -8.38284 -15.2987 -5.48104 -19.2378 1.63015 -12.7516 -1.44189; 
    -3.74086 7.90721 11.1552 -14.1214 -10.3397 -21.4329 7.22859 -14.4711 -10.8991 8.33515; 
    14.7998 8.9787 -21.6235 3.72706 14.2505 -9.07985 -11.1043 8.04242 11.8422 2.60541; 
    6.34024 -15.0943 9.47232 6.08362 4.34097 21.2139 3.3039 -19.2054 -8.104 -6.29724; 
    0.360561 -1.06411 -11.0445 -4.72424 -11.0463 4.65503 -8.29475 -11.5205 10.781 -4.34675; 
    -7.06482 -2.83673 12.1344 -4.68102 16.0371 -8.36048 10.002 0.019966 -11.402 11.9155; 
    14.8641 -3.04866 -7.09215 18.6027 -2.35385 22.788 2.1085 -7.93326 -1.50806 -13.6931; 
    -1.26083 13.637 2.12278 8.21666 14.2919 29.0383 -1.06951 10.9258 9.57393 19.0374; 
    2.78383 14.3913 -1.66774 0.814267 -12.9951 -23.3576 -6.81842 -3.55248 16.524 8.06446; 
    9.9391 18.7066 2.89517 -12.6942 -1.56281 4.20496 -3.08535 -11.7013 -21.8953 -4.98847; 
    -16.8015 0.786343 6.36629 14.8402 -32.5067 16.6992 -20.9401 -15.4587 3.31881 -9.77916; 
    14.0511 -11.7083 -13.3503 -7.84239 -2.65274 -2.62171 8.32718 -5.24657 -20.2232 12.2889; 
    2.04709 -3.84515 4.12686 9.11117 -17.7713 -21.906 5.90387 3.03766 -0.707907 -7.94278; 
    -6.83154 3.37102 -8.65084 -22.7554 -6.59799 -10.2151 -2.54518 3.96004 10.4363 -6.85964; 
    14.4678 11.9753 -6.29862 15.2213 -9.28768 -3.10528 17.3257 8.14499 6.32153 4.21377; 
    5.51799 -1.5711 9.61742 -8.33107 28.7373 1.07792 9.4248 18.4389 23.0143 9.23099; 
    10.5478 24.6597 16.8249 11.2943 4.5278 19.1195 11.0207 13.446 0.04694 2.38754; 
    29.0896 38.0808 17.6348 16.0027 41.256 23.2476 27.9794 22.8022 1.3166 32.8986; 
    31.1095 31.2316 16.3212 44.6627 28.4411 11.914 18.5054 15.6784 28.7709 14.5694; 
    31.7093 27.0195 34.9319 30.8789 30.7582 38.0754 21.5788 37.3393 36.3218 27.9984; 
    30.194 40.6804 21.3919 42.8206 30.7146 26.801 31.3619 34.2139 24.8158 29.0972; 
    42.8276 69.6867 22.2573 27.3236 28.9499 41.9646 23.6645 48.0107 35.3731 25.1517; 
    27.109 33.9736 50.0201 -8.37957 6.65546 19.9954 19.6714 5.57133 2.59717 33.2222;
    0.128217 -0.296121 3.98038 25.1066 24.0433 24.4073 -12.7762 -2.98239 -4.4672 1.33745; 
    -11.6814 7.41132 -31.0377 -19.0718 -4.09945 -21.0991 6.86988 -12.2994 -17.3426 1.58796; 
    -15.9138 -27.1424 -43.0492 -12.8061 -23.8874 -43.8529 -19.4979 -32.1956 -31.2422 -33.5785; 
    -18.124 -50.4781 -67.091 -57.5283 -42.5961 -45.0296 -41.4555 -39.6369 -43.3931 -52.3694; 
    -67.0495 -49.8281 -48.2037 -71.7206 -72.7627 -72.1513 -39.1733 -79.3736 -64.5156 -76.7592; 
    -81.9635 -99.3753 -67.8221 -80.2629 -92.3987 -82.704 -77.2276 -91.8988 -93.5574 -66.2482; 
    -73.5087 -78.1479 -94.0307 -92.9841 -85.9684 -55.672 -92.8403 -74.3811 -108.417 -72.8464; 
    -93.618 -92.3713 -69.9227 -104.401 -74.4752 -82.4136 -69.7852 -60.5005 -91.1863 -89.9677;
    -81.6571 -64.7515 -71.5682 -68.0543 -69.2813 -75.1904 -62.0388 -87.7184 -91.3978 -87.8935; 
    -35.3081 -49.6252 -69.8576 -48.359 -53.7694 -70.4505 -56.3414 -59.0953 -65.3579 -53.4586; 
    -43.1633 -28.9948 -21.4082 -30.1338 -23.9719 -23.0704 -37.2994 -16.2158 -23.9596 -16.6095];

valueY(1:41) = 0;
sqrS(1:nx) = 0;
sqrtS(1:nx) = 0;
leftTol(1:nx) = 0;
rightTol(1:nx) = 0;
leftM(1:nx) = 0;
rightM(1:nx) = 0;
cov = zeros(41, 41);

for i = 1 : nx
    for j = 1 : ny
        valueY(i) = valueY(i) + y(i,j);
    end
    valueY(i) = valueY(i) / ny;
end

for i = 1 : nx
    for j = 1 : ny
        sqrS(i) = sqrS(i) + ((y(i,j) - valueY(i))^2); 
    end
    sqrS(i) = sqrS(i) / (ny - 1);
    cov(i, i) = sqrS(i);

    sqrtS(i) = sqrt(sqrS(i));
    leftTol(i) = (valueY(i) - 3.379 * sqrtS(i));
    rightTol(i) = (valueY(i) + 3.379 * sqrtS(i));
    
    leftM(i) = valueY(i) - tinv((1+0.9)/2, 9) * sqrtS(i) / sqrt(ny);
    rightM(i) = valueY(i) + tinv((1+0.9)/2, 9) * sqrtS(i) / sqrt(ny);
end

g = max(sqrS) / sum(sqrS);
valueS = sum(sqrS) / nx; 

arrayA = zeros(41, 41);
F = zeros(1, 41);
Fkr = zeros(1, 41);
sqrR = zeros(1, 41);
approx_rating = zeros(1, 41);
for q = 0 : nx - 1
    X = zeros(nx, q + 1);
    for j = 1 : nx
        for i = 1 : q + 1
            X(j,i) = x(j)^(i - 1);
        end
    end
    a = pinv(X' * X) * (X') * valueY';
    for i = 1 : q + 1
         arrayA((q + 1), i) = a(i);
    end
    F(q + 1) = (ny * valueS.^(-1) * (X * a - valueY')' * (X * a - valueY')) / (nx - q - 1);
    Fkr(q + 1) = finv(0.95, nx - q - 1, ny - 1);
    if F(q + 1) < Fkr(q + 1)
        approx_rating(q+1) = F(q + 1);
        degree = q;
        break
    else
        approx_rating(q+1) = inf;
    end
    figure
    plot(x, valueY);
    hold on
    plot(x, X * a, 'r');
    legend('Полином', 'Аппроксимация');
    xlabel('X');
    ylabel('Y');
    hold off
    disp(q)
end

% figure
% plot(0:40, F);
% xlabel('q');
% ylabel('F');

Sa = pinv(X' * X) * valueS / ny;
condSa = cond(Sa);

corl = zeros(degree + 1, degree + 1);
for i = 1 : degree + 1
    for j = 1 : degree + 1
        corl(i, j) = Sa(i, j) / sqrt(Sa(i, i) * Sa(j, j));
    end
end

polinom40 = 40;
X40 = zeros(nx, polinom40 + 1);
for j = 1 : nx
    for i = 1 : polinom40 + 1
        X40(j, i) = x(j)^(i - 1);
    end
end

a40 = pinv(X40' * X40) * (X40') * valueY';
sqrR40 = ny * (valueS^(-1)) * ((X40 * a40 - valueY')') * (X40 * a40 - valueY');
F40 = sqrR40 / (nx - q - 1);

figure
xlabel('X');
ylabel('Y');
hold on
plot(x, valueY, 'bS-');
plot(x, leftM, 'g');
plot(x, rightM, 'g');
plot(x, leftTol, 'c');
plot(x, rightTol, 'c');
plot(x, X * a, 'm');
plot(x, X40 * a40, 'r');
legend('Мат. ожидание, полином','Нижний дов. предел','Верхний дов. предел','Нижний пар. тол. предел','Верхний пар. тол. предел','Полином 8-ой степени', 'Полином 40-ой степени');
for i = 1 : nx
    plot(x(i), y(i,:),'kX-');
end
hold off

Sa40 = pinv(X40' * X40) * valueS / ny;
condSa40 = cond(Sa40);

corl40 = zeros(41, 41);
for i = 1 : 40 + 1
    for j = 1 : 40 + 1
        corl40(i, j) = Sa40(i, j) / sqrt((Sa40(i, i) * Sa40(j ,j)));
    end
end

resultX = [ones(41,1) (-2:0.1:2)'];
fun1 = regress(valueY', resultX);
f1 = fun1(1)+ fun1(2).*x;
fun2 = robustfit(x, valueY');
f2 = fun2(1)+ fun2(2).*x;
fun3 = polyfit(x, valueY, 1);
f3 = fun3(1).*x+ fun3(2);
fun4 = ridge(valueY', resultX, 0);
f4 = fun4(1)+ fun4(2).*x;

figure;
hold on
plot(x, f1, 'g-');
plot(x, f2, 'm-');
plot(x, f3, 'k-');
plot(x, f4, 'c-');
plot(x, valueY, 'bS-');
xlabel('X');
ylabel('Y');
legend('regress', 'robustfit', 'polyfit', 'ridge', 'Исходная завис.');
 
f5 = polytool(x, valueY, 10, 0.05);

resultXi = -1.95 : .1 : 1.95;
fi1 = interp1(x, valueY, resultXi, 'linear');
fi2 = interp1(x, valueY, resultXi, 'pchip');
fi3 = pchip(x, valueY, resultXi);
fi4 = spline(x, valueY, resultXi);

figure;
hold on
plot(resultXi, fi1, 'k*-');
plot(resultXi, fi2, 'rS-');
plot(x, valueY,'bo-');
xlabel('X');
ylabel('Y');
legend('Линейная','Кубическая','Исходная завис.');

figure;
hold on
plot(resultXi, fi3, 'k*-');
plot(resultXi, fi4, 'rS-');
plot(x, valueY, 'bo-');
xlabel('X');
ylabel('Y');
legend('Полином Эрмита','Сплайн','Исходная завис.');

beta = nlinfit(x, valueY', @polynom, a);
poly = polynom(beta, x);

figure;
hold on
plot(x, poly, 'r');
plot(x, valueY, 'bS-');
xlabel('X');
ylabel('Y');
legend('nlinfit','Исходная завис.');
hold off

function pol = polynom(a, x)
pol(1 : length(x)) = 0;
for i = 1 : length(x)
    for j = 1 : length(a)
        pol(i) = pol(i) + a(j) * x(i)^(j-1);
    end
    pol(i) = pol(i) * sin(x(i));
end
pol = pol';
length(pol);
end

% figure
% hold on; grid on
%     scatter(x,valueY,'o');
%     Полином 1-ой степени
%     modelfun = @(a,X)(sin(a(1).*X) + a(2)).*(a(3) + a(4).*X);
%     beta0 = ones(4);
%     beta = nlinfit(x,valueY, modelfun, beta0);
%     plot(x, modelfun(beta,x))
%     Полином 3-ой степени
%     modelfun = @(a,X)(sin(a(1).*X) + a(2)).*(a(3) + a(4).*X + a(5).*X.^2+a(6).*X.^3);
%     beta0 = ones(6);
%     beta = nlinfit(x,valueY, modelfun, beta0);
%     plot(x, modelfun(beta,x))
%     Полином 5-ой степени
%     modelfun = @(a,X)(sin(a(1).*X) + a(2)).*(a(3) + a(4).*X + a(5).*X.^2+a(6).*X.^3 + a(7).*X.^4 + a(8).*X.^5);
%     beta0 = ones(8);
%     beta = nlinfit(x,valueY, modelfun, beta0);
%     plot(x, modelfun(beta,x))
% hold off